##==========================================================================
 #                   Quectel OpenCPU
 #
 #              Copyright(c) 2012-2013 Quectel Ltd. All rights reserved.
 #
 #--------------------------------------------------------------------------
 # File Description
 # ----------------
 #      OpenCPU makefile for GCC.
 #
 #--------------------------------------------------------------------------
 #==========================================================================

#-------------------------------------------------------------------------------
# Configure GCC installation path, and GCC version.
# To execute "arm-none-eabi-gcc -v" in command line can get the current gcc version
#-------------------------------------------------------------------------------
GCC_INSTALL_PATH=C:\Program Files (x86)\CodeSourcery\Sourcery_CodeBench_Lite_for_ARM_EABI
GCC_VERSION=4.7.2

C_PREDEF=-D __AUDIO__
#-------------------------------------------------------------------------------
# Configure the Cloud Solution
#-------------------------------------------------------------------------------
CLOUD_SOLUTION =
#GITWIZS_SOLUTION

#-------------------------------------------------------------------------------
# Configure version and out target
#-------------------------------------------------------------------------------
PLATFORM = APPGS3MD
MEMORY   = M32
VERSION  = A01
TARGET   = $(strip $(PLATFORM))$(strip $(MEMORY))$(strip $(VERSION))

#-------------------------------------------------------------------------------
# Configure the include directories
#-------------------------------------------------------------------------------
INCS =  -I $(ENV_INC)
INCS += -I ./           \
        -I include      \
        -I ril/inc      \
        -I custom       \
        -I custom/config   \
        -I custom/fota/inc \
        -I custom/MQTT \
        -I custom/MQTT/MQTTPacket \
        -I custom/MQTT/RTOS \
        -I custom/cJSON \
        -I custom/app \





#-------------------------------------------------------------------------------
# Configure source code dirctories
#-------------------------------------------------------------------------------
SRC_DIRS=custom     \
        ril\src    \
	custom\config     \
        custom\fota\src   \
        custom\app \
        custom\MQTT    \
        custom\MQTT\MQTTPacket \
        custom\MQTT\RTOS   \
        custom\cJSON   \	
        



#-------------------------------------------------------------------------------
# Configure source code files to compile in the source code directories
#-------------------------------------------------------------------------------
MQTT=$(wildcard custom/MQTT/*.c)
MQTT_PACKET=$(wildcard custom/MQTT/MQTTPacket/*.c)
MQTT_RTOS=$(wildcard custom/MQTT/RTOS/*.c)
CJSON=$(wildcard custom/cJSON/*.c)
SRC_SYS=$(wildcard custom/config/*.c)
SRC_SYS_RIL=$(wildcard ril/src/*.c)
SRC_CUS=$(wildcard custom/*.c)
SRC_FOTA=$(wildcard custom/fota/src/*.c)
SRC_APP=$(wildcard custom/app/*.c)
OBJS=\
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(SRC_SYS))        \
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(SRC_SYS_RIL))    \
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(SRC_CUS))        \
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(SRC_FOTA))      \
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(MQTT))      \
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(MQTT_PACKET))      \
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(MQTT_RTOS))      \
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(CJSON))      \
        $(patsubst %.c, $(OBJ_DIR)/%.o, $(SRC_APP))      \

ifeq ($(strip $(CLOUD_SOLUTION)),GITWIZS_SOLUTION)
     INCS +=-I cloud/entity/gitwizs/inc
	 INCS +=-I cloud/http/inc
	 INCS +=-I cloud/protocol/mqtt/inc
	 SRC_DIRS +=cloud\entity\gitwizs\src
	 SRC_DIRS +=cloud\http\src
	 SRC_DIRS +=cloud\protocol\mqtt\src
	 SRC_CLOUD =$(wildcard cloud/entity/gitwizs/src/*.c)
	 SRC_CLOUD +=$(wildcard cloud/http/src/*.c)
	 SRC_CLOUD +=$(wildcard cloud/protocol/mqtt/src/*.c)
	 OBJS +=$(patsubst %.c, $(OBJ_DIR)/%.o, $(SRC_CLOUD))
	 C_PREDEF +=-D __$(CLOUD_SOLUTION)__
#else
     #other solutions to append
endif
#-------------------------------------------------------------------------------
# Configure user reference library
#-------------------------------------------------------------------------------
USERLIB=libs/gcc/app_start.lib

.PHONY: all
all:
#	$(warning <-- make all, C_PREDEF=$(C_PREDEF) -->)
	@$(MAKE) new -f make/gcc/gcc_makefile

include make\gcc\gcc_makefiledef

export GCC_INSTALL_PATH C_PREDEF OBJS USERLIB SRC_DIRS
